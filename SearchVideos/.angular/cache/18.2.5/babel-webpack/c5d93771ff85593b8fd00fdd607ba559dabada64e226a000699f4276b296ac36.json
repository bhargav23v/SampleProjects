{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { YoutubeService } from '../common/youtube.service';\nimport { fromEvent } from 'rxjs';\nimport { map, filter, debounceTime, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../common/youtube.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../video/video.component\";\nconst _c0 = [\"searchInput\"];\nfunction SearchComponent_youtube_video_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"youtube-video\", 8);\n  }\n  if (rf & 2) {\n    const video_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"video\", video_r1);\n  }\n}\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor(service) {\n      this.service = service;\n    }\n    ngOnInit() {\n      const source = fromEvent(this.searchInputEl.nativeElement, 'keyup');\n      const resultObservable = source.pipe(map(e => e.target.value),\n      // getting value typed from the event\n      filter(text => text.length > 1),\n      // filter out if any empty text\n      debounceTime(250),\n      // only call once every 250 ms (limit number of calls going to server )\n      // throttle vs debounce\n      map(value => this.service.search(value)), switchMap(results => results) // reject if call is pending\n      );\n      resultObservable.subscribe(videoModels => {\n        this.videos = videoModels;\n      });\n    }\n    static {\n      this.ɵfac = function SearchComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SearchComponent)(i0.ɵɵdirectiveInject(i1.YoutubeService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SearchComponent,\n        selectors: [[\"youtube-search\"]],\n        viewQuery: function SearchComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchInputEl = _t.first);\n          }\n        },\n        decls: 19,\n        vars: 1,\n        consts: [[\"searchInput\", \"\"], [1, \"container\"], [1, \"jumbotron\", \"bgm\"], [1, \"form-inline\", \"idt\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\"], [1, \"jumbotron\"], [1, \"card-deck\", \"bgt\"], [3, \"video\", 4, \"ngFor\", \"ngForOf\"], [3, \"video\"]],\n        template: function SearchComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h1\");\n            i0.ɵɵtext(3, \"Videos for Everyone\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"p\");\n            i0.ɵɵtext(5, \"Millions of videos for your entertainment\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 3)(8, \"label\");\n            i0.ɵɵtext(9, \"Start Searching here:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(10, \"input\", 4, 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"br\")(13, \"br\")(14, \"hr\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"div\", 1)(16, \"div\", 5)(17, \"div\", 6);\n            i0.ɵɵtemplate(18, SearchComponent_youtube_video_18_Template, 1, 1, \"youtube-video\", 7);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(18);\n            i0.ɵɵproperty(\"ngForOf\", ctx.videos);\n          }\n        },\n        dependencies: [i2.NgForOf, i3.VideoComponent],\n        styles: [\"h1[_ngcontent-%COMP%]{font-weight:800;padding-left:0;color:#fff}p[_ngcontent-%COMP%]{padding-left:20px;font-weight:700;color:#fff}.idt[_ngcontent-%COMP%]{float:right}.bgm[_ngcontent-%COMP%]{background-image:url(movies.jpg);background-size:cover;background-repeat:no-repeat;height:330px;width:100%}.bgt[_ngcontent-%COMP%]{margin-left:50px}label[_ngcontent-%COMP%]{font-weight:700;font-size:20px;margin-right:10px}input[_ngcontent-%COMP%]{padding-right:50px}\"]\n      });\n    }\n  }\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}